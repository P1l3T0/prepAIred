using prepAIred.Data;

namespace prepAIred.Services
{
    /// <summary>
    /// Service interface for interacting with AI agents and generating interview questions.
    /// </summary>
    public interface IAIService
    {
        /// <summary>
        /// Sends a prompt to the specified AI agent and retrieves a list of interview results.
        /// </summary>
        /// <remarks>This method allows interaction with an AI agent to generate interview results based
        /// on the provided prompt. Ensure that the AI agent is properly configured and capable of processing the
        /// specified prompt.</remarks>
        /// <typeparam name="TInterview">The type of interview objects to be returned. Must be a reference type.</typeparam>
        /// <param name="agent">The AI agent to which the prompt will be sent. This parameter cannot be <see langword="null"/>.</param>
        /// <param name="prompt">The input string containing the prompt or query to be processed by the AI agent. This parameter cannot be
        /// <see langword="null"/> or empty.</param>
        /// <returns>A task that represents the asynchronous operation. The task result contains a list of <typeparamref
        /// name="TInterview"/> objects generated by the AI agent. The list will be empty if no results are produced.</returns>
        Task<List<Interview>> AskAiAgentAsync<TInterview>(AIAgent agent, string prompt) where TInterview : class;
    }
}
